name: Create new release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine new version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --tags
          
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          
          echo "Current version: $latest_tag"
          
          if [[ "$latest_tag" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            major=${BASH_REMATCH[1]}
            minor=${BASH_REMATCH[2]}
            patch=${BASH_REMATCH[3]}
          
            new_version="v$major.$minor.$((patch+1))"
          else
            echo "Latest tag does not match semantic versioning format. Setting version to default v0.0.1."
            new_version="v0.0.1"
          fi
          
          echo "New version to be used: $new_version"
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: Release ${{ env.NEW_VERSION }}
          draft: false
          prerelease: false